// error-codes.ts
export enum ErrorCodes {
    BadRequest = 'BAD_REQUEST',
    Unauthorized = 'UNAUTHORIZED',
    PaymentRequired = 'PAYMENT_REQUIRED',
    Forbidden = 'FORBIDDEN',
    NotFound = 'NOT_FOUND',
    MethodNotAllowed = 'METHOD_NOT_ALLOWED',
    NotAcceptable = 'NOT_ACCEPTABLE',
    ProxyAuthenticationRequired = 'PROXY_AUTHENTICATION_REQUIRED',
    RequestTimeout = 'REQUEST_TIMEOUT',
    Conflict = 'CONFLICT',
    Gone = 'GONE',
    LengthRequired = 'LENGTH_REQUIRED',
    PreconditionFailed = 'PRECONDITION_FAILED',
    PayloadTooLarge = 'PAYLOAD_TOO_LARGE',
    URITooLong = 'URI_TOO_LONG',
    UnsupportedMediaType = 'UNSUPPORTED_MEDIA_TYPE',
    RangeNotSatisfiable = 'RANGE_NOT_SATISFIABLE',
    ExpectationFailed = 'EXPECTATION_FAILED',
    ImATeapot = 'IM_A_TEAPOT',
    MisdirectedRequest = 'MISDIRECTED_REQUEST',
    UnprocessableEntity = 'UNPROCESSABLE_ENTITY',
    Locked = 'LOCKED',
    FailedDependency = 'FAILED_DEPENDENCY',
    TooEarly = 'TOO_EARLY',
    UpgradeRequired = 'UPGRADE_REQUIRED',
    PreconditionRequired = 'PRECONDITION_REQUIRED',
    TooManyRequests = 'TOO_MANY_REQUESTS',
    RequestHeaderFieldsTooLarge = 'REQUEST_HEADER_FIELDS_TOO_LARGE',
    UnavailableForLegalReasons = 'UNAVAILABLE_FOR_LEGAL_REASONS',
  
    InternalServerError = 'INTERNAL_SERVER_ERROR',
    NotImplemented = 'NOT_IMPLEMENTED',
    BadGateway = 'BAD_GATEWAY',
    ServiceUnavailable = 'SERVICE_UNAVAILABLE',
    GatewayTimeout = 'GATEWAY_TIMEOUT',
    HTTPVersionNotSupported = 'HTTP_VERSION_NOT_SUPPORTED',
    VariantAlsoNegotiates = 'VARIANT_ALSO_NEGOTIATES',
    InsufficientStorage = 'INSUFFICIENT_STORAGE',
    LoopDetected = 'LOOP_DETECTED',
    NotExtended = 'NOT_EXTENDED',
    NetworkAuthenticationRequired = 'NETWORK_AUTHENTICATION_REQUIRED',
  }
  